networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:
  helloworld:
    image: hello-world-dotnet:9.0
    container_name: hello-world-dotnet
    platform: linux/amd64
    depends_on:
      - otel-collector
    build:
      context: HelloWorld
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      OpenTelemetry__Endpoint: http://otel-collector:4317
    networks:
      - monitoring

  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    container_name: otel-collector
    platform: linux/amd64
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yml
    ports:
      - "8888:8888"
      - "8889:8889"
      - "13133:13133"
      - "4317:4317"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    platform: linux/amd64
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    platform: linux/amd64
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    platform: linux/amd64
    command: '--path.rootfs=/host'
    ports:
      - '9100:9100'
    pid: host
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
    networks:
      - monitoring
